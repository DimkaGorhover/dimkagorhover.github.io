{"version":3,"sources":["data/links.js","data/contacts.js","components/cv/SocialPanel.js","Navigation.js","common/index.js","page/Home.js","components/code/Yaml.js","page/blog/Minio.js","components/code/Java.js","page/blog/JacksonStream.js","page/Blog.js","common/dates.js","data/loopme.js","data/CurrentSkills.js","data/cv_data.js","data/Nix.js","data/intellias.js","data/ciklum.js","data/privat/BRTP.js","data/privat/P24.js","components/cv/About.js","components/cv/Hobbies.js","components/commons/BlankLink.js","components/cv/Education.js","components/cv/Contacts.js","components/commons/Noop.js","components/cv/Skills.js","components/cv/Photo.js","components/cv/exp_old/TechStack.js","components/cv/exp_old/InnerExperiences.js","components/cv/exp_old/ExperienceLinks.js","components/cv/ExpPeriod.js","data/types.js","components/cv/ExpTitle.js","components/cv/exp_old/ExperienceEntry.js","components/cv/exp_old/ExperienceList.js","components/cv/exp_old/TableOfContent.js","components/cv/exp_old/Experience.js","components/commons/BootstrapLine.js","page/TechCV.js","components/cv/Header.js","components/cv/Languages.js","common/strings.js","components/cv/ShortExpList.js","page/MainCV.js","Routers.js","App.js","index.js","components/cv/Skills.module.scss","components/cv/Education.module.scss","components/cv/ExpTitle.module.scss","components/cv/Languages.module.scss","components/commons/BlankLink.module.scss","components/cv/Photo.module.scss"],"names":["links","home","name","url","blog","cv_tech","cv_main","mail","icon","important","target","link","skype","linkedIn","github","telegram","twitter","facebook","contacts","SocialItem","Nav","Link","href","SocialPanel","iconsSize","content","map","contact","index","Provider","value","size","Navigation","Navbar","bg","variant","expand","Brand","as","RouterLink","to","Toggle","aria-controls","Collapse","id","className","NavDropdown","title","Item","Divider","useTitle","useEffect","document","Home","linksContent","ListGroup","Jumbotron","Yaml","children","language","showLineNumbers","Minio","code","trim","Java","objectCode","parserCode","reactiveUtilsCode","readValuesCode","JacksonStream","BlogPage","useRouteMatch","Pagination","First","Prev","Next","Last","Routes","path","exact","component","Blog","prettyPeriod","endStr","start","end","startStr","dateFormat","Date","months","diffMonth","years","Math","floor","ceil","monthsSuffix","yearsSuffix","periodStr","durationList","push","join","exp01","position","company","location","city","country","dates","description","responsibility","techStack","frameworks","prod_env","build_tool","ci_cd","storage","vcs","metrics","exp02","achievements","currentState","exp03","exp04","exp","inner","linkToExpFn","Icon","first_working_day","info","level","about_me","firstDay","now","yearsOfExp","education","degree","subject","paper","con","current_skills","currentDate","clojureLastDate","clojureExp","loopmeExp","JavaIcon","ClojureIcon","diffYears","PythonIcon","JsIcon","GoIcon","LinuxIcon","SpringIcon","RxIcon","QuarkusIcon","ReactJsIcon","SparkIcon","MintIcon","UbuntuIcon","AlpineIcon","CentosIcon","AppleIcon","WindowsIcon","RedisIcon","PostgresIcon","KafkaIcon","DockerIcon","AnsibleIcon","K8SIcon","GCPIcon","AwsIcon","CurrentSkills","experiences","LoopMe","excess","__p24ukraine","showDates","__p24georgia","__p24abank","P24","About","line","hobbies","Hobbies","reduce","acc","hobby","BlankLink","rel","styles","Name","Degree","getFullYear","Education","e","Contacts","importantOnly","filter","i","style","marginLeft","Noop","Skill","Array","isArray","a","b","Skills","Table","table","skills","skill","Photo","photo","Image","src","thumbnail","TextBlock","length","TechStack","tableId","random","InnerExperiences","indexSuffix","innerExp","experience","ExperienceLinks","ExpPeriod","Location","PropTypes","shape","string","isRequired","Company","arrayOf","Dates","any","Experience","number","ExpTitleText","ExpTitle","props","text","text_item","ExperienceEntry","margin","expIndex","ExperienceList","mapperFn","exps","listStyle","TableOfContent","marginTop","BootstrapLine","Row","Col","xs","TechCV","Header","LanguageEntry","Languages","word0","word1","all","values","separator","word","ShortTechStack","data","Strings","ShortExpItemDescription","ShortExpItem","ShortExpList","exp0","exp1","MainCV","Routers","Container","fluid","HomePage","TechCVPage","MainCVPage","App","basename","process","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.beb09822.chunk.js","sourcesContent":["export const links = {\n  home   : {\n    name: () => 'Home',\n    url : () => '/',\n  },\n  blog   : {\n    name: () => 'Blog',\n    url : () => '/blog',\n  },\n  cv_tech: {\n    name: () => 'Technical CV',\n    url : () => '/cv/tech',\n  },\n  cv_main: {\n    name: () => 'Main CV',\n    url : () => '/cv/main',\n  },\n};\n","import React from 'react';\n\nimport {\n  FaFacebook as FacebookIcon,\n  FaGithub as GithubIcon,\n  FaLinkedin as LinkedInIcon,\n  FaSkype as SkypeIcon,\n  FaTelegram as TelegramIcon,\n  FaTwitter as TwitterIcon,\n} from 'react-icons/fa';\n\nimport { FiMail as MailIcon } from 'react-icons/fi';\n\nexport const mail = ((() => {\n  const icon = (<MailIcon />);\n  return {\n    important: true,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{' Email ( gd.mail.89@gmail.com )'}</span>,\n    link     : 'mailto:gd.mail.89@gmail.com',\n  };\n})());\n\nexport const skype = ((() => {\n  const icon = (<SkypeIcon />);\n  return {\n    important: true,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{' Skype ( dier_89 )'}</span>,\n    link     : 'skype:dier_89',\n  };\n})());\n\nexport const linkedIn = ((() => {\n  const icon = (<LinkedInIcon />);\n  return {\n    important: true,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{' LinkedIn ( dmitriy-gorkhover )'}</span>,\n    link     : 'https://www.linkedin.com/in/dmitriy-gorkhover/',\n  };\n})());\n\nexport const github = ((() => {\n  const icon = (<GithubIcon />);\n  return {\n    important: false,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{' Github'}</span>,\n    link     : 'https://github.com/DimkaGorhover',\n  };\n})());\n\nexport const telegram = ((() => {\n  const icon = (<TelegramIcon />);\n  return {\n    important: false,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{' Telegram'}</span>,\n    link     : 'https://t.me/hdmytro',\n  };\n})());\n\nexport const twitter = ((() => {\n  const icon = (<TwitterIcon />);\n  return {\n    important: false,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{` Twitter`}</span>,\n    link     : 'https://twitter.com/dghover',\n  };\n})());\n\nexport const facebook = ((() => {\n  const icon = (<FacebookIcon />);\n  return {\n    important: false,\n    target   : '_blank',\n    icon     : icon,\n    name     : <span>{icon}{` Facebook`}</span>,\n    link     : 'https://www.facebook.com/dmitriy.gorhover',\n  };\n})());\n\nexport const leetCode = (() => ({\n  important: false,\n  target   : '_blank',\n  name     : <span>LeetCode</span>,\n  link     : 'https://leetcode.com/dimkagorhover/',\n}))();\n\nexport const hackerrank = (() => ({\n  important: false,\n  target   : '_blank',\n  name     : <span>HackerRank</span>,\n  link     : 'https://www.hackerrank.com/gd_mail_89',\n}))();\n\nconst contacts = [\n  mail,\n  skype,\n  linkedIn,\n\n  github,\n  telegram,\n  twitter,\n  facebook,\n  leetCode,\n  hackerrank,\n];\n\nexport default contacts;\n","import { Nav } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons\";\nimport { github, mail, skype, telegram } from \"../../data/contacts\";\n\nconst SocialItem = ({ link, icon, target = \"_blank\" }) => {\n  return (\n    <Nav.Link href={link} target={target}>\n      {icon}\n    </Nav.Link>\n  );\n};\n\nexport const SocialPanel = ({ iconsSize = '1.6em' }) => {\n\n  const content = [\n    telegram,\n    github,\n    mail,\n    skype\n  ].map((contact, index) => (\n    <SocialItem key={index} {...contact} />\n  ))\n\n  return (\n    <IconContext.Provider value={{ size: iconsSize }}>\n      {content}\n    </IconContext.Provider>\n  );\n};\n","import { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { links } from './data/links';\nimport { SocialPanel } from './components/cv/SocialPanel';\n\nexport const Navigation = () => {\n  return (\n    <>\n      <Navbar bg={'dark'} variant={'dark'} expand={'sm'}>\n\n        <Navbar.Brand as={RouterLink} to={links.home.url()}>\n          Dmytro Horkhover\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'}>\n\n          <Nav className={'mr-auto'}>\n\n            <Nav.Link as={RouterLink} to={links.home.url()}>\n              Home\n            </Nav.Link>\n            <Nav.Link as={RouterLink} to={links.blog.url()}>\n              Blog\n            </Nav.Link>\n\n            <NavDropdown title='CV' id='basic-nav-dropdown'>\n\n              <NavDropdown.Item as={RouterLink} to={links.cv_main.url()}>\n                Main CV\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item as={RouterLink} to={links.cv_tech.url()}>\n                Technical CV\n              </NavDropdown.Item>\n\n            </NavDropdown>\n          </Nav>\n\n          <Nav className={'mr-right'}>\n            <SocialPanel />\n          </Nav>\n\n          {/*<Form inline>*/}\n          {/*    <FormControl type='text' placeholder='Search' className='mr-sm-2' disabled />*/}\n          {/*    <Button variant='outline-success' disabled>Search</Button>*/}\n          {/*</Form>*/}\n\n        </Navbar.Collapse>\n\n      </Navbar>\n    </>\n  );\n};\n","import { useEffect } from 'react';\n\nexport function useTitle(title = '') {\n  useEffect(() => {\n    document.title = `${title}`;\n  }, [title]);\n}\n","import { Jumbotron, ListGroup } from 'react-bootstrap';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { links } from '../data/links';\nimport { useTitle } from '../common';\n\nexport const Home = () => {\n  useTitle('Home Page');\n\n  const linksContent = [links.cv_main, links.cv_tech].map(({ name, url }, index) => (\n    <ListGroup.Item key={index} as={RouterLink} to={url()}>\n      {name()}\n    </ListGroup.Item>\n  ));\n\n  return (\n    <>\n      <Jumbotron>\n        <h1>Home Page</h1>\n      </Jumbotron>\n\n      <ListGroup>{linksContent}</ListGroup>\n    </>\n  );\n};\n","import SyntaxHighlighter from 'react-syntax-highlighter';\n\nexport function Yaml({ children }) {\n  return (\n    <SyntaxHighlighter language={'yaml'} showLineNumbers>\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n","import { useTitle } from '../../common';\nimport { Yaml } from '../../components/code/Yaml';\n\nexport const Minio = () => {\n  useTitle('Blog: Minio Cluster');\n\n  const code = `\nservices:\n  minio:\n    image: minio:latest\n  `.trim();\n\n  return (\n    <>\n      <h1>Minio Cluster (TBD)</h1>\n      <Yaml>{code}</Yaml>\n    </>\n  );\n};\n","import SyntaxHighlighter from 'react-syntax-highlighter';\n\nexport function Java({ children }) {\n  return (\n    <SyntaxHighlighter language={'java'} showLineNumbers>\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n","import React from 'react';\nimport { Java } from '../../components/code/Java';\nimport { useTitle } from '../../common';\n\nconst title = 'How to parse large JSON file';\n\nconst objectCode = `\n@ToString\nclass User {\n    private final int id;\n    private final String name;\n    \n    @JsonCreator\n    User(@JsonProperty(\"id\") int id, \n         @JsonProperty(\"name\") String name) {\n        this.id = id;\n        this.name = name;\n    }\n}\n`.trim();\n\nconst parserCode = `\nclass Parser {\n    \n    public void test() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        JsonFactory jsonFactory = objectMapper.getFactory();\n        ObjectReader objectReader = objectMapper.readerFor(User.class);\n        \n        try (JsonParser jsonParser = jsonFactory.createParser(inputStream())) {\n        \n            if (jsonParser.nextToken() != JsonToken.START_ARRAY) {\n                throw new IllegalStateException(\"Expected content to be an array\");\n            }\n        \n            while (jsonParser.nextToken() != JsonToken.END_ARRAY) {\n                User user = objectReader.readValue(jsonParser);\n                // do some processing with \"user\"\n            }\n        }\n    }\n}\n\n`.trim();\n\nconst reactiveUtilsCode = `\nclass ReactiveUtils {\n    \n    static <T> Flux<T> readValues(JsonParser jsonParser, Class<T> clazz) {\n        if (jsonParser == null) return Flux.error(new NullPointerException(\"jsonParser\"));\n        if (clazz == null)      return Flux.error(new NullPointerException(\"clazz\"));\n        return Flux.create(fluxSink -> {\n            try {\n                \n                ObjectMapper objectMapper = (ObjectMapper) jsonParser.getCodec();\n                ObjectReader objectReader = objectMapper.readerFor(clazz);\n                \n                if (jsonParser.nextToken() != JsonToken.START_ARRAY) {\n                    fluxSink.error(new IllegalStateException(\"Expected content to be an array\"));\n                    return;\n                }\n                \n                while (jsonParser.nextToken() != JsonToken.END_ARRAY) {\n                    T obj = objectReader.readValue(jsonParser);\n                    fluxSink.next(obj);\n                }\n                \n            } catch (IOException e) {\n                fluxSink.error(e);\n            }\n        });\n    }\n}\n`.trim();\n\nconst readValuesCode = `\n\nclass ReactiveParser {\n\n    static void test() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        JsonFactory jsonFactory = objectMapper.getFactory();\n    \n        Mono.fromCallable(() -> jsonFactory.createParser(inputStream()))\n                .flatMapMany(jsonParser -> {\n                    // reads all values and closes \"jsonParser\"\n                    return ReactiveUtils.readValues(jsonParser, User.class)\n                            .doFinally(signalType -> jsonParser.close());\n                })\n                .flatMap(user -> {\n                    // do some async processing with user\n                    return Flux.just(user);\n                })\n                .doOnError(e -> {\n                    // handle error\n                })\n                .subscribe();\n    }\n}\n`.trim();\n\nexport const JacksonStream = () => {\n  useTitle(title);\n  return (\n    <>\n      <h1>{title}</h1>\n      <p>\n        How to parse large JSON file by using FasterXML Jackson Streaming and ObjectMapper combination\n      </p>\n\n      <h2>Object</h2>\n      <Java>{objectCode}</Java>\n\n      <h2>Parser</h2>\n      <Java>{parserCode}</Java>\n\n      <h2>Reactive Solution (Project Reactor)</h2>\n      <h3>Reactive Parser</h3>\n      <Java>{readValuesCode}</Java>\n      <h3>Reactive Utils</h3>\n      <Java>{reactiveUtilsCode}</Java>\n    </>\n  );\n};\n\nJacksonStream.propTypes = {};\n","import { Jumbotron, ListGroup, Pagination } from 'react-bootstrap';\nimport { useTitle } from '../common';\nimport { Link as RouterLink, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Minio } from './blog/Minio';\nimport { JacksonStream } from './blog/JacksonStream';\n\nconst BlogPage = () => {\n  const { url } = useRouteMatch();\n  useTitle('Blog Page');\n  return (\n    <>\n      <Jumbotron>\n        <h1>Blog</h1>\n      </Jumbotron>\n\n      <ListGroup>\n        <ListGroup.Item as={RouterLink} to={`${url}/minio`}>\n          Minio Cluster\n        </ListGroup.Item>\n        <ListGroup.Item as={RouterLink} to={`${url}/jackson_streaming`}>\n          Jackson Stream Parsing\n        </ListGroup.Item>\n      </ListGroup>\n\n      <br />\n\n      <Pagination>\n        <Pagination.First />\n        <Pagination.Prev />\n        <Pagination.Item>{'1'}</Pagination.Item>\n        <Pagination.Next />\n        <Pagination.Last />\n      </Pagination>\n    </>\n  );\n};\n\nconst Routes = () => {\n  const { path } = useRouteMatch();\n  return (\n    <>\n      <Switch>\n        <Route exact path={`${path}/jackson_streaming`} component={JacksonStream} />\n        <Route exact path={`${path}/minio`} component={Minio} />\n        <Route exact path={`${path}`} component={BlogPage} />\n        <Route path={'*'}>\n          <Redirect to={`${path}`} />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport const Blog = () => {\n  return <Routes />;\n};\n","import { differenceInCalendarMonths as diffMonth, format as dateFormat } from \"date-fns\";\n\nexport const JANUARY = 0;\nexport const FEBRUARY = 1;\nexport const MARCH = 2;\nexport const APRIL = 3;\nexport const MAY = 4;\nexport const JUNE = 5;\nexport const JULY = 6;\nexport const AUGUST = 7;\nexport const SEPTEMBER = 8;\nexport const OCTOBER = 9;\nexport const NOVEMBER = 10;\nexport const DECEMBER = 11;\n\nexport const yearsOfExp = (firstDay, now = new Date()) => {\n  const years = (Math.floor(diffMonth(now, firstDay) / 12))\n  return `${years}+`;\n}\n\nexport const prettyPeriod = ({ start, end = null }) => {\n  let startStr = dateFormat(start, 'MMMM yyyy')\n  let endStr;\n  if (!end) {\n    end = new Date();\n    endStr = \"present\"\n  } else {\n    endStr = dateFormat(end, \"MMMM yyyy\")\n  }\n  let months = diffMonth(end, start) + 1\n  let years = Math.floor(months / 12)\n  months = Math.ceil(months - (years * 12))\n\n  let monthsSuffix = `month${((months > 1) ? \"s\" : \"\")}`\n  let yearsSuffix = `year${((years > 1) ? \"s\" : \"\")}`\n  let periodStr = `${startStr} - ${endStr}`\n\n  if (years > 0 || months > 0) {\n    let durationList = []\n    if (years > 0) {\n      durationList.push(`${years} ${yearsSuffix}`);\n    }\n    if (months > 0) {\n      durationList.push(`${months} ${monthsSuffix}`);\n    }\n    return `${periodStr} (${durationList.join(' ')})`;\n  }\n\n  return `${periodStr}`\n}\n","import { FEBRUARY, JULY, MARCH, NOVEMBER, OCTOBER, SEPTEMBER } from '../common/dates';\n\nconst exp01 = () => {\n  return {\n    id            : 'software_engineer_at_loopme_001',\n    position      : 'Clojure Developer',\n    company       : { name: 'LoopMe Ad Serving Team', link: 'https://loopme.com' },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: new Date(2014, JULY, 1),\n      end  : new Date(2015, FEBRUARY, 1),\n    },\n    description   : [],\n    responsibility: [\n      `\n            Migration from Ruby to Clojure, new features, develop fast solution for ad targeting\n            (choosing best ad from big list of ads)\n            `,\n    ],\n    techStack     : {\n      language  : 'Clojure (based on Java 8)',\n      frameworks: 'many Clojure specific libraries',\n      prod_env  : 'Bare-Metal Servers provisioned by Chef',\n      build_tool: 'Leiningen',\n      ci_cd     : 'Travis CI',\n      storage   : [\n        'PostgreSQL',\n        'Redis',\n        'Elasticsearch',\n      ],\n      vcs       : 'Git (Github)',\n      metrics   : [\n        'NewRelic',\n        'Elasticsearch',\n      ],\n    },\n  };\n};\n\nexport const exp02 = () => {\n  return {\n    id            : 'software_engineer_at_loopme_002',\n    position      : 'Clojure/Java Developer',\n    company       : { name: 'LoopMe Ad Serving Team', link: 'https://loopme.com' },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: exp01().dates.end,\n      end  : new Date(2016, MARCH, 1),\n    },\n    achievements  : [`\n            I had to implement a very difficult task between 2 languages. \n            It had to be easy if another team helped. But the idea was on PoC stage. \n            I had to do it by myself. I did it successfully and I got \"Company Hero\" award and £100. \n            This award is given once every six months.\n            `],\n    description   : null,\n    currentState  : 'Migrated from Clojure to Java fully',\n    responsibility: [`\n            Develop high-load ad-server, ad targeting, api’s for real time bidding platforms,\n            migration from Clojure to Java.\n            `],\n    techStack     : {\n      language  : 'Java 8, Clojure (based on Java 8)',\n      frameworks: 'Spring Boot, Spring 4',\n      prod_env  : 'Chef + (Apache Mesos + Marathon)',\n      build_tool: 'Leiningen (for Clojure Projects), Apache Maven 3+ (for Java Projects)',\n      ci_cd     : [\n        'Travis CI (for Ruby and Clojure)', 'Jenkins (for Java)',\n      ],\n      storage   : 'PostgreSQL, Redis, Elasticsearch',\n      vcs       : 'Git (Github)',\n      metrics   : 'Datadog → Grafana + InfluxDB',\n    },\n  };\n};\n\nconst exp03 = () => {\n  return {\n    id            : 'software_engineer_at_loopme_003',\n    position      : 'Java Developer',\n    company       : { name: 'LoopMe Ad Serving Team', link: 'https://loopme.com' },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: exp02().dates.end,\n      end  : new Date(2016, SEPTEMBER, 1),\n    },\n    description   : null,\n    responsibility: `\n            Develop high-load ad-server, ad targeting, api’s for real time bidding platforms,\n            api’s for front-end team.\n            `,\n    techStack     : {\n      language  : 'Java 8',\n      frameworks: 'Spring Boot, Spring 4, RxJava, gRPC (netty + protobuf)',\n      prod_env  : 'Docker, Kubernetes',\n      build_tool: 'Gradle 4.8',\n      ci_cd     : 'Jenkins',\n      storage   : 'Kafka, Cassandra, PostgreSQL, Elasticsearch',\n      vcs       : 'Git (Github)',\n      metrics   : 'Grafana → Datadog',\n    },\n  };\n};\n\nconst exp04 = () => {\n  return {\n    id            : 'software_engineer_at_loopme_004',\n    position      : 'Java Developer',\n    company       : { name: 'LoopMe Data Science Team', link: 'https://loopme.com' },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: exp03().dates.end,\n      end  : new Date(2018, NOVEMBER, 1),\n    },\n    achievements  : [\n      `\n            I’ve been working for Data Science team for about 2 years.\n            As a result, I created high-performance java applications by using\n            a small number of design patterns and different data structures\n            with response ~1ms (99 percentile).\n            `,\n      `\n            I didn't use a lot of frameworks\n            and libraries, and it helped with future migrations on new java versions.\n            `,\n    ],\n    responsibility: `\n            Develop high-performance high-load applications\n            for Data Science team, implement data science algorithms and adopt it for runtime,\n            deliver prediction and bidding models to production,\n            implement custom transport solutions for big prediction models,\n            benchmarking, data structures investigation.\n            `,\n    techStack     : {\n      language  : 'Java 8, 9, 10, 11 (currently preparing migration to 12ea)',\n      frameworks: 'Spring Boot 2, Spring 5, RxJava 2, gRPC (netty + protobuf)',\n      prod_env  : 'Docker, Kubernetes',\n      build_tool: 'Gradle 4.8.1, 4.10.2',\n      ci_cd     : 'Jenkins (pipelines + Docker Multi-Stage builds)',\n      storage   : 'Kafka, Cassandra, PostgreSQL, Elasticsearch 6',\n      vcs       : 'Git (Github)',\n      metrics   : 'Datadog → Prometheus + Grafana',\n    },\n  };\n};\n\nexport const exp = () => {\n  const inner = [\n    exp01(),\n    exp02(),\n    exp03(),\n    exp04(),\n  ];\n\n  const linkToExpFn = ({ name, id }) => {\n    return {\n      name  : `CV: ${name}`,\n      url   : `#${id}`,\n      target: '_self',\n    };\n  };\n\n  return {\n    id      : 'software_engineer_at_loopme',\n    position: 'Software Engineer',\n    company : { name: 'LoopMe', link: 'https://loopme.com' },\n    location: {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    links   : [\n      {\n        name: 'LoopMe.com',\n        url : 'https://loopme.com',\n      },\n      linkToExpFn(exp01()),\n      linkToExpFn(exp02()),\n      linkToExpFn(exp03()),\n      linkToExpFn(exp04()),\n    ],\n    dates   : {\n      start: new Date(2014, JULY, 1),\n      end  : new Date(2018, OCTOBER, 30),\n    },\n    // description: [\n    //     `\n    //     LoopMe's full-stack tech platform harnesses mobile data,\n    //     using a powerful combination of attribution, Artificial Intelligence,\n    //     and analytics to deliver outstanding campaign performance against\n    //     brand outcomes — consideration, purchase intent, foot traffic, and offline sales.\n    //     `, `\n    //     The company was founded by experienced mobile advertising executives\n    //     Stephen Upstone (CEO) and Marco Van de Bergh (CTO) in 2012.\n    //     LoopMe has global offices in London, New York, Dnipro, Chicago, LA,\n    //     Atlanta, Boston, Dallas, Detroit, San Francisco, Singapore, Beijing, Dubai, and Johannesburg.\n    //     `\n    // ],\n\n    description: [\n      `I'd been developing a Digital Advertising platform, implementing ad-targeting algorithms \n            on Clojure, and then rewritten on Java. Also, I'd been developing a Java Application \n            that uses prediction algorithms to choose the best ad and place the best bid.`,\n    ],\n    // responsibility: [\n    //     `\n    //     My responsibility was in developing backend Clojure/Java Applications\n    //     (APIs) for the front end team and other clients.\n    //     `,\n    //     `\n    //     The major task was to develop a fault tolerance application\n    //     that should handle big amount of traffic and store it to a database.\n    //     `,\n    //     `\n    //     For a better understanding of what I was doing,\n    //     I split the description of my experience\n    //     in LoopMe into 4 parts (periods) that you can find below.\n    //     `\n    // ],\n    techStack   : {\n      language  : [\n        'Clojure, Java (8...12)',\n      ],\n      frameworks: [\n        'Spring Boot 2', 'Spring 5', 'RxJava 2', 'gRPC', 'Spark',\n      ],\n      prod_env  : [\n        'Docker', 'Kubernetes',\n      ],\n      build_tool: [\n        'Gradle 5',\n      ],\n      ci_cd     : [\n        'Jenkins (pipelines + Docker Multi-Stage builds)',\n      ],\n      storage   : [\n        'Redis', 'Kafka', 'Cassandra', 'PostgreSQL', 'Elasticsearch 6', 'Clickhouse', 'Hadoop',\n      ],\n      vcs       : [\n        'Git', 'Github',\n      ],\n      metrics   : [\n        'Datadog', 'Prometheus', 'Grafana',\n      ],\n    },\n    achievements: null,\n    currentState: null,\n    inner       : inner,\n  };\n};\n","import React from 'react';\nimport { differenceInYears as diffYears } from 'date-fns';\nimport { exp as loopmeExp, exp02 as clojureExp } from './loopme';\nimport {\n  FaApple as AppleIcon,\n  FaDocker as DockerIcon,\n  FaJava as JavaIcon,\n  FaJs as JsIcon,\n  FaLinux as LinuxIcon,\n  FaPython as PythonIcon,\n  FaStream as RxIcon,\n} from 'react-icons/fa';\nimport {\n  SiAlpinelinux as AlpineIcon,\n  SiAnsible as AnsibleIcon,\n  SiApachekafka as KafkaIcon,\n  SiCentos as CentosIcon,\n  SiKubernetes as K8SIcon,\n  SiLinuxmint as MintIcon,\n  SiQuarkus as QuarkusIcon,\n  SiSpring as SpringIcon,\n  SiUbuntu as UbuntuIcon,\n} from 'react-icons/si';\nimport {\n  DiAws as AwsIcon,\n  DiClojure as ClojureIcon,\n  DiGoogleCloudPlatform as GCPIcon,\n  DiPostgresql as PostgresIcon,\n  DiRedis as RedisIcon,\n  DiSpark as SparkIcon,\n  DiWindows as WindowsIcon,\n} from 'react-icons/di';\nimport { GrGolang as GoIcon, GrReactjs as ReactJsIcon } from 'react-icons/gr';\n\nconst Icon = ({ icon, children }) => {\n  if (!icon) {\n    return <span>{children}</span>;\n  }\n  return (\n    <span>\n      {icon()}\n      {` ${children}`}\n    </span>\n  );\n};\n\nexport const CurrentSkills = () => {\n  const currentDate = new Date();\n  const clojureLastDate = clojureExp().dates.end;\n  const gcpLastDate = loopmeExp().dates.end;\n\n  return [\n    {\n      name : 'Languages',\n      value: [\n        <Icon icon={JavaIcon}>Java (Versions 6+)</Icon>,\n        <Icon icon={ClojureIcon}>{`Clojure (2 years on prod, ${diffYears(\n          currentDate,\n          clojureLastDate,\n        )} years ago)`}</Icon>,\n        <Icon icon={PythonIcon}>Python</Icon>,\n        <Icon icon={JsIcon}>JavaScript</Icon>,\n        <Icon icon={GoIcon}>Go</Icon>,\n        <Icon icon={LinuxIcon}>{'Shell {sh, bash, zsh} (low-mid)'}</Icon>,\n      ],\n    },\n    {\n      name : 'Frameworks',\n      value: [\n        <Icon icon={SpringIcon}>Spring (Boot, Web, etc.)</Icon>,\n        <Icon icon={RxIcon}>Reactive Streams (RxJava, Project Reactor)</Icon>,\n        'gRPC',\n        <Icon icon={QuarkusIcon}>Quarkus</Icon>,\n        <Icon icon={ReactJsIcon}>ReactJS</Icon>,\n        <Icon icon={SparkIcon}>Apache Spark</Icon>,\n      ],\n    },\n    {\n      name : 'OS',\n      value: [\n        <Icon icon={MintIcon}>Linux Mint</Icon>,\n        <Icon icon={UbuntuIcon}>Ubuntu</Icon>,\n        <Icon icon={AlpineIcon}>Linux Alpine</Icon>,\n        <Icon icon={CentosIcon}>CentOS</Icon>,\n        <Icon icon={AppleIcon}>Mac OS</Icon>,\n        <Icon icon={WindowsIcon}>Windows</Icon>,\n      ],\n    },\n    {\n      name : 'Data Bases',\n      value: [\n        <Icon icon={RedisIcon}>Redis</Icon>,\n        <Icon icon={PostgresIcon}>PostgreSQL</Icon>,\n        'Zookeeper',\n        <Icon icon={KafkaIcon}>Kafka</Icon>,\n      ],\n    },\n    {\n      name : 'Tools',\n      value: [\n        <Icon icon={DockerIcon}>Docker</Icon>,\n        <Icon icon={DockerIcon}>Docker-Compose</Icon>,\n        <Icon icon={AnsibleIcon}>Ansible</Icon>,\n      ],\n    },\n    {\n      name : 'Clusters',\n      value: [<Icon icon={K8SIcon}>Kubernetes</Icon>, <Icon icon={DockerIcon}>Docker Swarm</Icon>],\n    },\n    {\n      name : 'Clouds',\n      value: [\n        // `Google Cloud Platform (user, ${diffYears(currentDate, gcpLastDate)} years ago)`,\n        <Icon icon={GCPIcon}>Google Cloud Platform</Icon>,\n        // 'AWS (beginner)',\n        <Icon icon={AwsIcon}>AWS</Icon>,\n      ],\n    },\n  ];\n};\n","import * as Nix from './Nix';\nimport * as Intellias from './intellias';\nimport * as LoopMe from './loopme';\nimport * as Ciklum from './ciklum';\nimport * as BRTP from './privat/BRTP';\nimport * as P24 from './privat/P24';\nimport { CurrentSkills } from './CurrentSkills';\nimport { FEBRUARY, JANUARY, JUNE, SEPTEMBER, yearsOfExp } from '../common/dates';\nimport con from './contacts';\n\nconst first_working_day = new Date(2012, FEBRUARY, 28);\n\nexport const info = {\n  first_working_day: first_working_day,\n  language         : [\n    { name: 'English', level: 'Intermediate' },\n    { name: 'Ukrainian', level: 'Native' },\n    { name: 'Russian', level: 'Fluent' },\n    { name: 'Deutsch', level: 'Elementary' },\n  ],\n  about_me         : [\n    `Software Engineer ${yearsOfExp(first_working_day)} years, \n    mostly Java and JVM based languages, such as Clojure, Groovy.\n    `,\n    `Passionate about Java, JVM, performance, benchmarking, \n    data structures, reactive streams.\n    `,\n    `Looking for New Challenges, Product Companies are more preferable, \n    full time, a remote is more preferable for now, but an office \n    is not the issue, relocation to other city/country is not an issue.\n    `,\n  ],\n};\n\nexport const education = [\n  {\n    name    : 'Ukrainian State Chemical Technology University',\n    link    : 'https://udhtu.edu.ua/en/',\n    degree  : {\n      name   : 'Bachelor',\n      subject: 'Computer Science',\n      paper  : null,\n    },\n    location: 'Dnipro, Ukraine',\n    dates   : {\n      start: new Date(2006, SEPTEMBER, 1),\n      end  : new Date(2010, JUNE, 1),\n    },\n  },\n  {\n    name    : 'Ukrainian State Chemical Technology University',\n    link    : 'https://udhtu.edu.ua/en/',\n    degree  : {\n      name   : 'Master',\n      subject: 'Computer Science',\n      paper  : null,\n    },\n    location: 'Dnipro, Ukraine',\n    dates   : {\n      start: new Date(2010, SEPTEMBER, 1),\n      end  : new Date(2011, JUNE, 1),\n    },\n  },\n];\nexport const contacts = con;\n\nexport const current_skills = CurrentSkills();\n\nconst self_employed_exp = () => {\n  return ({\n    id            : 'self_employed',\n    position      : 'Full-Stack Engineer',\n    company       : {\n      name: 'Self-Employed',\n    },\n    location      : {\n      city   : 'Lviv',\n      country: 'Ukraine',\n    },\n    description   : [\n      `Personal R&D Project. Building k8s Cluster on Bare-Metal using Ansible from scratch. Tech stack: Ansible, VirtualBox (Alpine, CentOS, Ubuntu), Python3.`,\n      `Developing Backend Application for Telegram Bot for scheduling different services. Tech Stack: Java11, Quarkus, Graal Native Image, Docker`,\n      `Data processing for a retail company, recommendation platform. I also had to do a few tasks related to UI (Admin Console). Tech stack: Java8, Go, Docker, Kafka, Apache Spark, Redis, TypeScript, Angular 6, k8s, Azure Data Lake.`,\n    ],\n    achievements  : [\n      `Setup k8s Cluster from scratch on VirtualBox (Alpine Linux, \n            CentOS 7, Ubuntu 20.04) by using Ansible Playbooks`,\n    ],\n    dates         : {\n      start: new Date(2020, JANUARY, 1),\n    },\n    responsibility: [],\n    techStack     : {\n      language  : [\n        'Java 8',\n        'Java 15',\n        'GraalVM 20.1 (Java 11)',\n        'Python 3',\n        'Go',\n        'JavaScript',\n        'TypeScript',\n      ],\n      frameworks: [\n        'Spring Boot',\n        'Quarkus',\n        'RxJava 2',\n        'gRPC',\n        'ReactJS',\n        'Angular 6',\n      ],\n      prod_env  : [\n        'VirtualBox (Alpine Linux 3.11 + CentOS 7 + Ubuntu 20.04)',\n        'Ansible',\n        'Docker Compose',\n        'Docker Swarm',\n        'Kubernetes 1.18.2',\n      ],\n      build_tool: ['Gradle 6', 'Apache Maven'],\n      ci_cd     : ['Jenkins', 'Github Actions', 'Gitlab'],\n      storage   : [\n        'PostgreSQL', 'Redis', 'Zookeeper', 'Kafka', 'Min.io', 'H2DB'\n      ],\n      vcs       : ['Github', 'Gitlab', 'Gitea'],\n      metrics   : ['Prometheus', 'Grafana'],\n    },\n  });\n};\n\nexport const experiences = [\n  self_employed_exp(),\n  Nix.exp(),\n  Intellias.exp(),\n  LoopMe.exp(),\n  Ciklum.exp(),\n  BRTP.exp(),\n  P24.exp(),\n];\n","import { AUGUST, DECEMBER } from '../common/dates';\n\nexport const exp = () => {\n  return {\n    id            : 'software_engineer_at_n_ix',\n    position      : 'Software Java Engineer',\n    company       : { name: 'N-IX', link: 'https://n-ix.com' },\n    location      : {\n      city   : 'Lviv',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: new Date(2019, AUGUST, 1),\n      end  : new Date(2019, DECEMBER, 31),\n    },\n    description   : [\n      `\n            I'd been working for the company that provides technology \n            and business services for a number of telecommunications \n            companies as well as a variety of other multinational enterprises.\n            `,\n    ],\n    responsibility: [\n      `\n            I was a part of the team that worked on implementing \n            a new gateway protocol - SMGP (Short Message Gateway Protocol).\n            `, `\n            It was necessary not only to implement the task but also \n            to cover all possible cases (unit tests), as well as most of the third-party code.\n            `, `\n            After that, I was engaged in fixing security vulnerabilities in the project. \n            To find and check such vulnerabilities i have been using tools \n            like \"fortify-on-demand\" (on production) and SonarQube (on the local subnet).\n            `,\n    ],\n    achievements  : [\n      `To reduce the time of callback about vulnerabilities fixes \n            we needed to set up SonarQube as close as possible to our subnet. \n            `,\n      `We decided to set up Docker Swarm Cluster on the local Azure Cloud.\n            `,\n      `As the result, I set up Docker Swarm Cluster \n            with Gitlab (mirrored code from Subversion), \n            Jenkins CI (for scheduling SonarQube tasks, \n                and mirroring Subversion repository to Gitlab), \n                and SonarQube (for report about vulnerabilities fixes) by myself.\n                `,\n      `Before this, I wasn't familiar close with devops-like tasks. \n            It was interesting experience for me`,\n    ],\n    techStack     : {\n      language  : ['Java 6'],\n      build_tool: ['Apache Maven 3.3.1'],\n      ci_cd     : ['Jenkins'],\n      frameworks: [],\n      storage   : [],\n      metrics   : [],\n      vcs       : ['Subversion (git svn plugin)'],\n    },\n  };\n};\n","import { MARCH, NOVEMBER } from '../common/dates';\n\nexport const exp = () => {\n  return {\n    id            : 'senior_java_developer_at_intellias',\n    position      : 'Senior Java Developer',\n    company       : { name: 'Intellias', link: 'https://intellias.com' },\n    location      : {\n      city   : 'Lviv',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: new Date(2018, NOVEMBER, 1),\n      end  : new Date(2019, MARCH, 15),\n    },\n    description   : [\n      `I'd been working on implementing new algorithms \n            for map matching, providing a comprehensive analysis \n            of different algorithms comparison, developing and extend \n            map matching pipelines with multi-algorithms support`,\n    ],\n    responsibility: [\n      `Implementing new Map Matcher algorithm based \n            on Hidden Markov Model + Algorithm Viterbi`,\n    ],\n    techStack     : {\n      language  : ['Java 8'],\n      frameworks: [],\n      prod_env  : [],\n      build_tool: ['Apache Maven'],\n      ci_cd     : ['Jenkins'],\n      storage   : [],\n      metrics   : [],\n      vcs       : ['Git (Gerrit)'],\n    },\n  };\n};\n\n","import { JULY, NOVEMBER } from '../common/dates';\n\nexport const exp = () => {\n  return {\n    id         : 'software_engineer_at_ciklum',\n    position   : 'Java Developer',\n    company    : { name: 'Ciklum', link: 'https://ciklum.com' },\n    excess     : true,\n    links      : [\n      { name: 'Ciklum.com', url: 'https://www.ciklum.com' },\n      {\n        name  : 'CV: Software Engineer at LoopMe',\n        url   : '#software_engineer_at_loopme',\n        target: '_self',\n      },\n    ],\n    description: `\n            I’d been working on LoopMe project when it was Ciklum's outstaff project.\n            More details in \"Software Engineer at LoopMe\".\n            `,\n    location   : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates      : {\n      start: new Date(2014, JULY, 1),\n      end  : new Date(2015, NOVEMBER, 1),\n    },\n  };\n};\n","import { JULY } from '../../common/dates';\n\nexport const exp = () => {\n  return {\n    id            : 'brtp_middle_software_engineer',\n    position      : 'Middle Software Engineer',\n    company       : { name: 'Privat Bank', link: 'https://privatbank.ua' },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: new Date(2013, JULY, 1),\n      end  : new Date(2014, JULY, 30),\n    },\n    description   : [\n      'I’d been developing internal web projects for the business department',\n    ],\n    techStack     : {\n      language  : ['Java (Versions: 6, 7, 8)', 'JavaScript'],\n      frameworks: ['Spring 3', 'jQuery', 'Angular 1'],\n      build_tool: ['Apache Maven'],\n      ci_cd     : ['Jenkins'],\n      storage   : ['PostgreSQL', 'Redis'],\n      vcs       : ['Gitolite'],\n      metrics   : [],\n    },\n    responsibility: [],\n  };\n};\n","import { FEBRUARY, JULY } from '../../common/dates';\n\nconst p24ukraine = () => {\n  return {\n    id            : 'privat24_ukraine',\n    name          : 'Privat24 Ukraine',\n    showDates     : false,\n    dates         : {\n      start: new Date(2012, FEBRUARY, 28),\n      end  : new Date(2013, JULY, 1),\n    },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    description   : [],\n    responsibility: [\n      'New small features, support current features, bugfix, unit testing, etc.',\n    ],\n    techStack     : {\n      language  : ['Java 6', 'JavaScript'],\n      frameworks: ['Java EE (EJB, Resin)', 'jQuery', 'Backbone'],\n      build_tool: ['Apache Ant'],\n      ci_cd     : ['Jenkins'],\n      storage   : ['Sybase', 'Redis', 'RabbitMQ'],\n      vcs       : ['Subversion'],\n    },\n  };\n};\n\nconst p24georgia = () => {\n  return {\n    id            : 'privat24_georgia',\n    name          : 'Privat24 Georgia',\n    showDates     : false,\n    dates         : {\n      start: new Date(2012, FEBRUARY, 28),\n      end  : new Date(2013, JULY, 1),\n    },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    achievements  : [`\n            I spend 4 weekends (mostly nights) and migrated this project \n            from an old stack of technology (Java 6 + Apache Ant) \n            to a new one (Java 7 + Spring + Apache Maven + Git).\n            `, `\n            Unfortunately, there weren't mentors to help me. \n            And based on my lack of knowledge it was very stressful for me, \n            but as a result, I got a great experience that I remember nowadays.\n            `],\n    responsibility: [`\n            Develop and support internet banking web application, same as Privat24 Ukraine\n            `],\n    description   : '',\n    techStack     : {\n      language  : ['Java 6', 'JavaScript'],\n      frameworks: ['Java EE (EJB, Resin)', 'jQuery', 'Spring 3', 'jQuery'],\n      build_tool: 'Netbeans’ Apache Ant scripts → Apache Maven',\n      ci_cd     : ['Jenkins'],\n      storage   : ['Sybase', 'Redis', 'RabbitMQ'],\n      vcs       : ['Subversion', 'Git (Gitlab)'],\n    },\n  };\n};\n\nconst p24abank = () => {\n  return {\n    id            : 'privat24_a_bank',\n    name          : 'Privat24 A-Bank',\n    showDates     : false,\n    dates         : {\n      start: new Date(2012, FEBRUARY, 28),\n      end  : new Date(2013, JULY, 1),\n    },\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    responsibility: [`\n            Develop and support internet banking web application, same as Privat24 Ukraine\n            `],\n    description   : '',\n    techStack     : {\n      language  : ['Java 6, JavaScript'],\n      frameworks: ['Java EE (EJB), jQuery'],\n      prod_env  : ['custom'],\n      build_tool: ['Netbeans’ Ant scripts'],\n      ci_cd     : ['Jenkins'],\n      storage   : ['Sybase, Redis, RabbitMQ'],\n      vcs       : ['Subversion'],\n      metrics   : [],\n    },\n  };\n};\n\nexport const exp = () => {\n\n  const __p24ukraine = p24ukraine();\n  const __p24georgia = p24georgia();\n  const __p24abank = p24abank();\n\n  return {\n    id            : 'software_engineer_at_privat_bank',\n    position      : 'Junior Software Engineer',\n    company       : { name: 'Privat24 (Privat Bank)', link: 'https://privat24.ua' },\n    links         : [\n      { name: 'PrivatBank.ua', url: 'https://privatbank.ua' },\n      { name: 'Privat24.ua', url: 'https://privat24.ua' },\n    ],\n    description   : [\n      `I was a member of the team that developed and \n            modernized Ukrainian local internet banking system Privat24`,\n    ],\n    responsibility: [`\n            Small features (clinet messages counters, form \"don't block credit card abroad\", etc.),\n            support, bugfixing, unit testing, etc.\n            `],\n    location      : {\n      city   : 'Dnipro',\n      country: 'Ukraine',\n    },\n    dates         : {\n      start: __p24ukraine.dates.start,\n      end  : __p24georgia.dates.end,\n    },\n    techStack     : {\n      language  : ['Java (Versions: 6, 7, 8)', 'JavaScript'],\n      frameworks: ['Java EE', 'EJB', 'Spring 3', 'jQuery', 'Angular 1'],\n      build_tool: ['Apache Ant', 'Apache Maven'],\n      ci_cd     : ['Jenkins'],\n      storage   : ['Sybase', 'Redis', 'RabbitMQ'],\n      vcs       : ['Subversion', 'Gitlab'],\n      metrics   : ['Zabbix'],\n    },\n    inner         : [\n      __p24ukraine,\n      __p24georgia,\n      __p24abank,\n    ],\n  };\n};\n","import React from 'react';\nimport { info } from '../../data/cv_data';\n\nexport const About = () => {\n  const content = info.about_me.map((line, index) => <p key={index}>{line}</p>);\n\n  return (\n    <>\n      <h4 id={'about_me'}>About Me</h4>\n      {content}\n    </>\n  );\n};\n","import React from 'react';\n\nconst hobbies = [\n  'Traveling',\n  'Motorcycles',\n  'Gym',\n  'Football',\n  'Cars',\n  'Bicycles',\n]\n\nexport const Hobbies = () => (\n  <div className={\"hobbies\"}>\n    <h4>Hobbies</h4>\n    <p>\n      {hobbies.reduce((acc, hobby) => {\n        return `${acc}, ${hobby}`\n      })}\n    </p>\n  </div>\n);\n","import styles from './BlankLink.module.scss';\nimport PropTypes from 'prop-types';\n\nexport const BlankLink = ({ href, name }) => {\n  if (href) {\n    return (\n      <a target={'_blank'} rel={'noopener noreferrer'} href={href} className={styles.link}>\n        {name}\n      </a>\n    );\n  }\n\n  return <>{name}</>;\n};\n\nBlankLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]).isRequired,\n};\n\n","import React from 'react';\nimport { education } from '../../data/cv_data';\nimport { BlankLink } from '../commons/BlankLink';\nimport styles from './Education.module.scss'\n\nconst Name = ({ name, link }) => {\n  if (link) {\n    name = (<BlankLink name={name} href={link}/>)\n  }\n  return (<span className={styles.name}>{name}</span>)\n}\n\nconst Degree = ({ name, subject }) => (\n  <div>\n    <span>Degree: {name}, {subject}</span>\n  </div>\n);\n\nconst Item = ({ education }) => {\n  const { degree, dates, paper } = education\n  const { start, end } = dates\n  return (\n    <div className={styles.education}>\n      <div>\n        <Name {...education} />\n      </div>\n      <div>\n        <span>{start.getFullYear()} - {end.getFullYear()}</span>\n      </div>\n      {degree && <Degree {...degree} />}\n      {paper && (<div>Paper: {paper}</div>)}\n    </div>\n  );\n};\n\nexport const Education = () => (\n  <>\n    <h3>Education</h3>\n    <ul>\n      {education.map((e, index) => (\n        <li key={index}>\n          <Item education={e}/>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n","import { contacts } from \"../../data/cv_data\";\nimport { BlankLink } from '../commons/BlankLink';\n\nexport const Contacts = ({ importantOnly = true }) => {\n\n  const links = contacts\n    .filter(({ important }) => !(importantOnly && important === false))\n    .map(({ name, link }, i) => <BlankLink key={i} name={name} href={link}/>)\n    .map((component, index) => <li key={index}>{component}</li>);\n\n  return (\n    <>\n      <h4>Contacts</h4>\n      <ul style={{ marginLeft: \"-1em\" }}>\n        {links}\n      </ul>\n    </>\n  );\n};\n","export const Noop = () => <></>;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { current_skills as skills } from '../../data/cv_data';\nimport styles from './Skills.module.scss'\nimport { Noop } from \"../commons/Noop\";\n\nconst Skill = ({ name, value }) => {\n\n  if (!(name && value)) {\n    return <Noop/>\n  }\n\n  if (!Array.isArray(value)) {\n    value = [value]\n  }\n\n  const content = value.reduce((a, b) => (<>{a}{`, `}{b}</>))\n\n  return (\n    <tr>\n      <td className={styles.name}>\n        {name}\n      </td>\n      <td className={styles.value}>\n        {content}\n      </td>\n    </tr>\n  );\n};\n\nexport const Skills = () => {\n  return (\n    <>\n      <h3>Actual Skills</h3>\n\n      <Table className={styles.table}>\n        <tbody>\n        {skills.map((skill, index) => (<Skill key={index} {...skill} />))}\n        </tbody>\n      </Table>\n\n    </>\n  );\n};\n","import { Image } from 'react-bootstrap';\nimport styles from './Photo.module.scss'\n\nexport const Photo = () => (\n  <div className={styles.photo}>\n    <Image src={'/static/IMG_20190609_191430__01.jpg'} thumbnail/>\n  </div>\n);\n","import React from 'react';\nimport { Table } from 'react-bootstrap'\n\nconst TextBlock = ({ title, content }, index) => {\n\n    if (content || (Array.isArray(content) && content.length > 0)) {\n        if (!Array.isArray(content)) {\n            content = [content]\n        }\n\n        if (content.length <= 0) {\n            return <></>\n        }\n\n        content = content.reduce((a, b) => `${a}, ${b}`)\n        // content = content.map((line, i) => <span key={i}>{line}</span>)\n\n        return (\n            <tr key={index}>\n                <td>\n                    <b>{title}</b>:\n                </td>\n                <td>{content}</td>\n            </tr>\n        )\n    }\n    return null;\n}\n\nexport const TechStack = ({ techStack }) => {\n\n    if (techStack) {\n\n        const tableId = `${Math.random()}`\n\n        return (\n            <div>\n                <h5>Stack of technologies</h5>\n                <Table id={tableId}>\n                    <tbody>\n                        <TextBlock title=\"Language\" content={techStack.language} />\n                        <TextBlock title=\"Frameworks &amp; Libs\" content={techStack.frameworks} />\n                        <TextBlock title=\"Production env\" content={techStack.prod_env} />\n                        <TextBlock title=\"Build Tool\" content={techStack.build_tool} />\n                        <TextBlock title=\"CI/CD\" content={techStack.ci_cd} />\n                        <TextBlock title=\"Storage\" content={techStack.storage} />\n                        <TextBlock title=\"VCS\" content={techStack.vcs} />\n                        <TextBlock title=\"Metrics System\" content={techStack.metrics} />\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n    return null;\n};\n","import React from \"react\";\nimport { ExperienceEntry } from \"./ExperienceEntry\";\n\nexport const InnerExperiences = ({ experiences, indexSuffix }) => {\n\n    if (experiences) {\n\n        const innerExp = experiences.map((experience, index) => {\n            index = index + 1;\n            return (\n                <ExperienceEntry\n                    key={index}\n                    index={index}\n                    indexSuffix={indexSuffix}\n                    experience={experience} />\n            )\n        });\n\n        return <div>{innerExp}</div>\n    }\n    return null;\n};\n","import React from 'react';\nimport {} from 'react-router-dom'\n\nconst Link = ({ name, url, target = \"_blank\" }) => {\n    return (\n        <li>\n            <a href={url} target={target}>{name ? name : url}</a>\n        </li>\n    )\n}\n\nexport const ExperienceLinks = ({ links }) => {\n\n    if (!links)\n        return (<></>)\n\n    return (\n        <div>\n            <h5>Links</h5>\n            <ul>\n                {links.map((link, index) => (<Link key={index} {...link} />))}\n            </ul>\n        </div>\n    )\n}\n","import { prettyPeriod } from '../../common/dates'\n\nexport const ExpPeriod = ({ dates }) => {\n  return (\n    <>\n      {prettyPeriod(dates)}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Location = PropTypes.shape({\n  city   : PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n});\n\nexport const Company = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n});\n\nexport const TechStack = PropTypes.shape({\n  language  : PropTypes.arrayOf(PropTypes.string).isRequired,\n  frameworks: PropTypes.arrayOf(PropTypes.string),\n  prod_env  : PropTypes.arrayOf(PropTypes.string),\n  build_tool: PropTypes.arrayOf(PropTypes.string),\n  ci_cd     : PropTypes.arrayOf(PropTypes.string),\n  storage   : PropTypes.arrayOf(PropTypes.string),\n  metrics   : PropTypes.arrayOf(PropTypes.string),\n  vcs       : PropTypes.arrayOf(PropTypes.string),\n});\n\nexport const Dates = PropTypes.shape({\n  start: PropTypes.any.isRequired,\n  end  : PropTypes.any,\n});\n\nexport const Experience = PropTypes.shape({\n  index         : PropTypes.number,\n  id            : PropTypes.string,\n  position      : PropTypes.string.isRequired,\n  company       : Company.isRequired,\n  location      : Location.isRequired,\n  dates         : Dates.isRequired,\n  description   : PropTypes.arrayOf(PropTypes.string),\n  responsibility: PropTypes.arrayOf(PropTypes.string),\n  techStack     : TechStack.isRequired,\n\n});\n\nExperience.inner = PropTypes.arrayOf(Experience);\n","import { BlankLink } from '../commons/BlankLink';\nimport styles from './ExpTitle.module.scss';\nimport PropTypes from 'prop-types';\nimport { Company } from '../../data/types';\n\nexport const ExpTitleText = ({ index, name, position, company }) => {\n  index = index ? (`${index}. `) : ('');\n  if (position && company) {\n    return (\n      <>\n        {index}\n        {position}\n        {' @ '}\n        <span className={styles.company}>\n          <BlankLink name={company.name} href={company.link} />\n        </span>\n      </>);\n  }\n\n  return `${index}${name}`;\n};\n\nexport const ExpTitle = (props) => {\n  return (\n    <h4 className={styles.title}>\n      <ExpTitleText {...props} />\n    </h4>\n  );\n};\n\nExpTitle.propTypes = {\n  position: PropTypes.string.isRequired,\n  company : Company,\n};\n","import React from \"react\";\nimport { TechStack } from \"./TechStack\";\nimport { InnerExperiences } from \"./InnerExperiences\";\nimport { ExperienceLinks } from \"./ExperienceLinks\";\nimport { ExpPeriod } from \"../ExpPeriod\";\nimport { ExpTitle } from \"../ExpTitle\";\n\nconst TextBlock = ({ title, text }) => {\n\n  if ((typeof text == 'string' && text.length > 0)\n    || (Array.isArray(text) && text.length > 0)) {\n\n    if (!Array.isArray(text)) {\n      text = [text]\n    }\n\n    text = text.map((text_item, i) => <p key={i}>{text_item}</p>)\n\n    return (\n      <div>\n        <h5>{title}</h5>\n        <div>{text}</div>\n      </div>\n    )\n  }\n  return null;\n}\n\n// const ExperienceTitle = (props) => {\n\n//     let { index, id, name, position, company, city, dates } = props\n\n//     id = id ? id : (\"\" + Math.random())\n\n//     return (<ExpTitle {...props} />)\n// }\n\nexport const ExperienceEntry = ({ experience: exp, indexSuffix, index }) => {\n\n  if (indexSuffix)\n    index = indexSuffix + '.' + index\n\n  exp = { index: index, ...exp }\n\n  return (\n    <div>\n      <hr style={{ margin: \"2rem 0\" }}/>\n\n      <ExpTitle {...exp} />\n      <ExpPeriod dates={exp.dates}/>\n      {` | ${exp.city}`}\n\n      <TextBlock title=\"Description\" text={exp.description}/>\n      <TextBlock title=\"Responsibility\" text={exp.responsibility}/>\n      <TextBlock title=\"Achievements\" text={exp.achievements}/>\n      <TextBlock title=\"Current State\" text={exp.currentState}/>\n      <TechStack expIndex={index} techStack={exp.techStack}/>\n      <ExperienceLinks links={exp.links}/>\n      <InnerExperiences experiences={exp.inner} indexSuffix={index}/>\n    </div>\n  )\n}\n","import React from 'react';\nimport { experiences } from \"../../../data/cv_data\";\nimport { ExperienceEntry } from \"./ExperienceEntry\";\n\nexport const ExperienceList = () => {\n\n  const content = experiences.map((experience, index) => (\n    <ExperienceEntry key={index}\n                     index={index + 1}\n                     experience={experience}/>\n  ));\n\n  return (\n    <div>{content}</div>\n  )\n};\n","import React from 'react';\nimport { experiences } from '../../../data/cv_data';\nimport { ExpPeriod } from '../../cv/ExpPeriod';\nimport { ExpTitleText } from '../../cv/ExpTitle';\n\n// FIXME: LINKS DON'T WORK HERE BECAUSE react-router\nconst mapperFn = (exp, index) => {\n\n    exp = { index: (index + 1), ...exp }\n    const { id, dates, showDates, inner } = exp\n\n    return (\n        <li key={index}>\n            <a href={'#' + id}>\n                <ExpTitleText {...exp} />\n            </a>\n\n            {(!(showDates === false)) && (\n                <>\n                    {` (`}<ExpPeriod dates={dates} />{`)`}\n                </>\n            )}\n\n            {inner && content({ exps: inner })}\n        </li>\n    )\n}\n\nconst content = ({ exps }) => {\n    return (\n        <ul style={{ listStyle: 'none' }}>\n            {exps.map(mapperFn)}\n        </ul>\n    )\n}\n\nexport const TableOfContent = () => {\n\n    return (\n        <div>\n            <h4>Table Of Contents</h4>\n            {content({ exps: experiences })}\n        </div>\n    )\n}\n","import React from 'react';\nimport { ExperienceList } from \"./ExperienceList\";\nimport { TableOfContent } from \"./TableOfContent\";\n\nexport const Experience = () => {\n  return (\n    <div>\n      <h3 style={{ marginTop: '0px' }}>\n        Experience\n      </h3>\n      <TableOfContent/>\n      <ExperienceList/>\n    </div>\n  );\n};\n","import { Col, Row } from 'react-bootstrap';\n\nexport const BootstrapLine = ({ children }) => {\n  return (\n    <Row>\n      <Col xs={12}>\n        {children}\n      </Col>\n    </Row>\n  );\n};\n","import { Col, Row } from 'react-bootstrap';\nimport { About } from '../components/cv/About';\nimport { Hobbies } from '../components/cv/Hobbies';\nimport { Education } from '../components/cv/Education';\nimport { Contacts } from '../components/cv/Contacts';\nimport { Skills } from '../components/cv/Skills';\nimport { Photo } from '../components/cv/Photo';\nimport { Experience } from '../components/cv/exp_old/Experience';\nimport { BootstrapLine as Line } from '../components/commons/BootstrapLine';\nimport { useTitle } from \"../common\";\n\nexport const TechCV = () => {\n\n  useTitle('CV: Dmytro Horkhover')\n\n  const leftSize = 3\n\n  return (\n    <>\n      <Line>\n        <h1>Dmytro Horkhover</h1>\n        <h5>Java Software Engineer</h5>\n      </Line>\n      <Row>\n        <Col xs={leftSize} className=\"bg-dark\">\n          <Photo/>\n          <About/>\n          <Hobbies/>\n        </Col>\n        <Col xs={12 - leftSize}>\n          <Line><Education/></Line>\n          <Line><Contacts importantOnly={false}/></Line>\n          <Line><Skills/></Line>\n          <Line><Experience/></Line>\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import React from 'react';\n\nexport const Header = () => {\n  return (\n    <div>\n      <h1>Dmytro Horkhover</h1>\n      <h5>Java Software Engineer</h5>\n    </div>\n  )\n}\n","import React from 'react'\nimport { info } from '../../data/cv_data'\nimport styles from './Languages.module.scss'\n\nexport const LanguageEntry = ({ name, level }) => (\n  <>\n    <span className={styles.name}>{name}</span>\n    {' '}\n    <span className={styles.level}>({level})</span>\n  </>\n);\n\nexport const Languages = () => {\n\n  const content = info.language\n    .map(LanguageEntry)\n    .reduce((word0, word1) => (<>{word0}{', '}{word1}</>));\n\n  return (\n    <>\n      <h4>Languages</h4>\n      <p>{content}</p>\n    </>\n  );\n};\n","export const join = (values, separator = ', ') => {\n  if (!values) {\n    return '';\n  }\n  if (!Array.isArray(values)) {\n    return `${values}`;\n  }\n  if (values.length > 0) {\n    return values\n      .filter((word) => word.length > 0)\n      .reduce((word0, word1) => `${word0}${separator}${word1}`)\n  }\n  return ''\n};\n\nconst all = { join }\n\nexport default all\n","import { experiences } from '../../data/cv_data';\nimport { ExpTitle } from './ExpTitle';\nimport { Noop } from '../commons/Noop';\nimport { ExpPeriod } from './ExpPeriod';\nimport Strings from '../../common/strings';\nimport styles from './ShortExpList.module.scss';\nimport { Experience } from '../../data/types';\n\nconst ShortTechStack = ({ data }) => {\n  if (!data) {\n    return <Noop />;\n  }\n  const content = Strings.join([\n    Strings.join(data.language),\n    Strings.join(data.frameworks),\n    Strings.join(data.storage),\n    Strings.join(data.metrics),\n  ]);\n  return (\n    <>\n      <b>Tech Stack:</b> {content}\n    </>\n  );\n};\n\nconst ShortExpItemDescription = ({ data }) => {\n  if (!data) {\n    return <Noop />;\n  }\n  return (\n    <>\n      {data.map((text, i) => <p key={i}>{text}</p>)}\n    </>\n  );\n};\n\nconst ShortExpItem = ({ data }) => {\n  const { dates, description, techStack } = data;\n  const { city, country } = data.location;\n  return (\n    <>\n      <ExpTitle {...data} />\n      <p>\n        <ExpPeriod dates={dates} />\n        {' | '}\n        <span className={styles.location}>\n          ({city}, {country})\n        </span>\n      </p>\n\n      <ShortExpItemDescription data={description} />\n      <ShortTechStack data={techStack} />\n    </>\n  );\n};\n\nShortExpItem.propTypes = {\n  data: Experience,\n};\n\nexport const ShortExpList = () => {\n  return (\n    <>\n      {experiences\n        .filter(exp => !exp.excess)\n        .map((exp, i) => {\n          return <ShortExpItem key={i} data={({ index: i + 1, ...exp })} />;\n        })\n        .reduce((exp0, exp1) => {\n          return (<>\n            {exp0}\n            <hr />\n            {exp1}\n          </>);\n        })}\n    </>\n  );\n};\n","import { Col, Row } from 'react-bootstrap';\nimport { About } from '../components/cv/About';\nimport { Header } from '../components/cv/Header';\nimport { Contacts } from '../components/cv/Contacts';\nimport { Education } from '../components/cv/Education';\nimport { Skills } from '../components/cv/Skills';\nimport { Photo } from '../components/cv/Photo';\nimport { Languages } from '../components/cv/Languages';\nimport { ShortExpList } from '../components/cv/ShortExpList';\nimport { useTitle } from '../common';\n\nexport const MainCV = () => {\n  useTitle('CV: Dmytro Horkhover');\n  return (\n    <>\n      <Row>\n        <Col xs={9}>\n          <Header />\n          <About />\n          <Languages />\n        </Col>\n        <Col xs={3}>\n          <Photo />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Contacts />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Education />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Skills />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ShortExpList />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import { Container } from 'react-bootstrap';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { links } from './data/links';\nimport { Home as HomePage } from './page/Home';\nimport { Blog as BlogPage } from './page/Blog';\nimport { TechCV as TechCVPage } from './page/TechCV';\nimport { MainCV as MainCVPage } from './page/MainCV';\n\nexport const Routers = () => {\n  const { home, blog, cv_tech, cv_main } = links;\n  return (\n    <Container fluid=\"lg\" className=\"main-container\">\n      <Switch>\n        <Route exact path={home.url()} component={HomePage} />\n        <Route path={blog.url()} component={BlogPage} />\n        <Route exact path={cv_tech.url()} component={TechCVPage} />\n        <Route exact path={cv_main.url()} component={MainCVPage} />\n        <Route path={'*'}>\n          <Redirect to={'/'} />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { HashRouter as ReactRouter } from 'react-router-dom';\nimport { Navigation } from './Navigation';\nimport { Routers } from './Routers';\nimport { Noop } from './components/commons/Noop';\n\nexport const App = () => {\n  return (\n    <ReactRouter basename={process.env.PUBLIC_URL}>\n      <header>\n        <Navigation />\n      </header>\n      <main>\n        <Routers />\n      </main>\n      <footer>\n        <Noop />\n      </footer>\n    </ReactRouter>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\n// https://github.com/facebook/create-react-app\n// https://learn.javascript.ru/screencast/react#react-state\n// https://dev.to/javascripterika/deploy-a-react-app-as-a-github-user-page-with-yarn-3fka\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Skills_name__8KaFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"education\":\"Education_education__17CDb\",\"name\":\"Education_name__1nLcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"company\":\"ExpTitle_company__14P1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Languages_name__2yr8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"BlankLink_link__1V7IU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Photo_photo__3ynqJ\"};"],"sourceRoot":""}